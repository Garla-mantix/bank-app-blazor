@page "/MyAccounts"
@inject IAccountService AccountService

<h1>Your Accounts</h1>

@if ((_depositAccounts.Count + _savingsAccounts.Count) == 0)
{
    <p>You have no accounts yet.</p>
    <p>Go to "Create Account" to get started!</p>
}
else
{
    <h3>Deposit Accounts</h3>
    @if (_depositAccounts.Count == 0)
    {
        <p>No deposit accounts yet.</p>
    }
    else
    {
        <table class="table account-table">
            <colgroup>
                <col />
                <col />
                <col />
                <col />
            </colgroup>
            <thead>
            <tr>
                <th>Name</th>
                <th>Balance</th>
                <th>Currency</th>
                <th>Last Updated</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var account in _depositAccounts)
            {
                <tr>
                    <td><strong>@account.Name</strong></td>
                    <td>@account.Balance.ToString("F2")</td>
                    <td>@account.CurrencyType</td>
                    <td>@(account.LastUpdated != default ? account.LastUpdated.ToLocalTime().ToString("g") : "N/A")</td>
                </tr>
            }
            </tbody>
        </table>

    }

    <h3>Savings Accounts</h3>
    @if (_savingsAccounts.Count == 0)
    {
        <p>No savings accounts yet.</p>
    }
    else
    {
        <table class="table account-table">
            <colgroup>
                <col />
                <col />
                <col />
                <col />
            </colgroup>
            <thead>
            <tr>
                <th>Name</th>
                <th>Balance</th>
                <th>Currency</th>
                <th>Last Updated</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var account in _savingsAccounts)
            {
                <tr>
                    <td><strong>@account.Name</strong></td>
                    <td>@account.Balance.ToString("F2")</td>
                    <td>@account.CurrencyType</td>
                    <td>@(account.LastUpdated != default ? account.LastUpdated.ToLocalTime().ToString("g") : "N/A")</td>
                </tr>
            }
            </tbody>
        </table>
    }
}

@code {
    private List<IBankAccount> _depositAccounts = new();
    private List<IBankAccount> _savingsAccounts = new();

    protected override async Task OnInitializedAsync()
    {
        // Get all accounts from the service
        var allAccounts = await AccountService.GetAccounts() ?? new List<IBankAccount>();

        // Separate them into Deposit and Savings
        _depositAccounts = allAccounts
            .Where(a => a.AccountType == AccountType.Deposit)
            .ToList();

        _savingsAccounts = allAccounts
            .Where(a => a.AccountType == AccountType.Savings)
            .ToList();
    }
}
